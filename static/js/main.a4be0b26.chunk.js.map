{"version":3,"sources":["components/DateInput.js","components/pages/Home.js","components/NavBar.js","components/App.js","serviceWorker.js","components/store/Contexts.js","components/store/AgeProvider.js","index.js"],"names":["useStyle","makeStyles","wrap","paddingLeft","paddingRight","card","marginBottom","marginTop","DateInput","props","classes","sl","name","disabled","vars","useState","init","def","final","state","setState","Card","className","variant","CardContent","FormControlLabel","control","Checkbox","checked","undefined","onChange","event","target","console","log","handleChange","value","label","Typography","Grid","container","justify","item","xs","as","TextField","type","Transition","forwardRef","ref","Slide","direction","Home","open","setOpen","select","Y","single","getTime","timeStamp","days","year","Math","floor","daysCarry","month","day","age","setAge","initDate","Date","getDate","initMonth","getMonth","initYear","getFullYear","defDate","defMonth","defYear","getYear","finalDate","finalMonth","finalYear","initialValues","onSubmit","values","Number","valueOf","initTimeStamp","finalTimeStamp","defTimeStamp","Button","color","size","style","padding","fullWidth","Dialog","TransitionComponent","onClose","aria-labelledby","aria-describedby","keepMounted","Container","minWidth","textAlign","NavBar","AppBar","position","Toolbar","Menu","useStyles","body","width","minHeight","background","root","height","paddingTop","App","maxWidth","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","AgeContext","createContext","Provider","now","setSelect","access","setSelects","attr","children","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a4be0b26.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, TextField, Card, CardContent, FormControlLabel, Checkbox } from '@material-ui/core';\r\n// import { CheckBox } from '@material-ui/icons';\r\nimport { Field } from 'formik';\r\n\r\n\r\nconst useStyle = makeStyles({\r\n  wrap: {\r\n    paddingLeft:5,\r\n    paddingRight:5\r\n  },\r\n  card:{\r\n    marginBottom:10,\r\n    marginTop:10\r\n  }\r\n})\r\n\r\n\r\nconst DateInput = props => {\r\nconst classes = useStyle()\r\nconst { sl, name, disabled } = props;\r\n// console.log(props)\r\n\r\nconst vars= [\"Date\",\"Month\",\"Year\"];\r\n\r\nconst [state, setState] = useState({\r\n  init:false,\r\n  def:false,\r\n  final:false\r\n})\r\n\r\n// const a = state.filter(state=> sl===state)\r\n// console.log(a)\r\n// const { init, def, final } = state;\r\nconst handleChange = name => event => {\r\n  setState({ ...state, [name]: event.target.checked });\r\n  console.log(sl, state)\r\n};\r\n\r\n// const check = () => sl==='init'? state.init: sl==='def'?state.def : sl==='final'?state.final:undefined;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card\r\n        className   = {classes.card}\r\n        variant     = \"elevation\" >\r\n\r\n        <CardContent>\r\n          <FormControlLabel\r\n            control={ <Checkbox\r\n              checked   = { sl==='init'? state.init: sl==='def'?state.def : sl==='final'?state.final:undefined }\r\n              onChange  = { handleChange(sl) }\r\n              value     = { sl } /> }\r\n              label     = {<Typography variant=\"h5\">{ name }</Typography>}\r\n          />\r\n\r\n          <Grid container justify=\"space-around\">\r\n            <Grid \r\n              item\r\n              xs          = {3}\r\n              className   = {classes.wrap} >\r\n              <Field \r\n                as          = {TextField}\r\n                type        = \"number\"\r\n                name        = {`${sl}${vars[0]}`}\r\n                label       = {vars[0]}\r\n                disabled    = {disabled && disabled===true?true:false} />\r\n            </Grid>\r\n            <Grid \r\n              item\r\n              xs          = {3}\r\n              className   = {classes.wrap} >\r\n              <Field\r\n                as          = {TextField}\r\n                type        = \"number\"\r\n                name        = {`${sl}${vars[1]}`}\r\n                label       = {vars[1]}\r\n                disabled    = {disabled && disabled===true?true:false} />\r\n            </Grid>\r\n            <Grid \r\n              item\r\n              xs          = {5}\r\n              className   = {classes.wrap} >\r\n              <Field\r\n                as          = {TextField}\r\n                type        = \"number\"\r\n                name        = {`${sl}${vars[2]}`}\r\n                label       = {vars[2]}\r\n                disabled    = {disabled && disabled===true?true:false} />\r\n            </Grid> \r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DateInput\r\n","import React, { Fragment, useState, forwardRef } from 'react';\r\nimport DateInput from '../DateInput';\r\nimport { Formik, Form } from 'formik';\r\nimport { Container, Button, Slide, Dialog, Typography } from '@material-ui/core';\r\n\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst Home = () =>{\r\n// for Dialog Box\r\n  const [open, setOpen] = useState(false);\r\n\r\n// for CheckBox\r\n  const [select, setSelect] = useState({\r\n    init    : false,\r\n    def     : false,\r\n    final   : false\r\n  })\r\n\r\n  // Calculation od Age\r\n  const Y = 31557600000;\r\n  const single = {\r\n    year: Y,\r\n    month: Y/12,\r\n    day: Y/365\r\n  }\r\n  const getTime = timeStamp => {\r\n    const days = timeStamp / single.day;\r\n    const year = Math.floor(days / 365);\r\n    const daysCarry = Math.floor(days % 365);\r\n    const month = Math.floor(daysCarry / 30);\r\n    const day = Math.floor(daysCarry % 30);\r\n    return { year, month, day}\r\n  }\r\n\r\n// \r\n  const [age, setAge] = useState({\r\n    init: {year:0, month:0,day:0},\r\n    def: {year:0, month:0,day:0},\r\n    final: {year:0, month:0,day:0}\r\n  })\r\n\r\n\r\n\r\n\r\n  const [initialValues, setInitialValues] = useState({\r\n    initDate    : new Date(0).getDate(),\r\n    initMonth   : new Date(0).getMonth()+1,\r\n    initYear    : new Date(0).getFullYear(),\r\n    defDate     : new Date(0).getDate(),\r\n    defMonth    : new Date(0).getMonth()+1,\r\n    defYear     : new Date(0).getYear(),\r\n    finalDate   : new Date().getDate(),\r\n    finalMonth  : new Date().getMonth()+1,\r\n    finalYear   : new Date().getFullYear()\r\n  })\r\n\r\n\r\n  const submitHandler = values => {\r\n    const { initDate, initMonth, initYear, defDate, defMonth, defYear, finalDate, finalMonth, finalYear } = values;\r\n\r\n    const init = \r\n      new Date(Number(initYear),\r\n      Number(initMonth)-1,\r\n      Number(initDate)).valueOf()\r\n\r\n    // const def =\r\n    //   new Date(Number(defYear),\r\n    //   Number(defMonth)-1,\r\n    //   Number(defDate)).valueOf()\r\n\r\n    const final =\r\n      new Date(Number(finalYear),\r\n      Number(finalMonth)-1,\r\n      Number(finalDate)).valueOf()\r\n    \r\n    const initTimeStamp = init.valueOf()\r\n    const finalTimeStamp = final.valueOf()\r\n    const defTimeStamp = initTimeStamp >0 ? finalTimeStamp - initTimeStamp : finalTimeStamp + initTimeStamp ;\r\n    \r\n    setAge({\r\n      init: getTime(initTimeStamp),\r\n      def: getTime(defTimeStamp),\r\n      final: getTime(finalTimeStamp)\r\n    })\r\n  \r\n    setOpen(true)\r\n  }\r\n  \r\n  return(\r\n    <Fragment>\r\n      <Formik\r\n        initialValues={ initialValues }\r\n        onSubmit={submitHandler}\r\n      >\r\n        <Form>\r\n          <DateInput name=\"Birth Date\" sl=\"init\" disabled={select.init} />\r\n          {/* <DateInput name=\"Age\" sl=\"def\" disabled={select.def} /> */}\r\n          <DateInput name=\"Today\" sl=\"final\" disabled={select.final} />\r\n          <Button\r\n            variant   = \"contained\"\r\n            color     = \"primary\"\r\n            size      = \"large\"\r\n            style     = {{padding:15}}\r\n            type      = \"submit\"\r\n            fullWidth >Calculate</Button>\r\n        </Form>\r\n\r\n      </Formik>\r\n        <Dialog\r\n          open                  = {open}\r\n          TransitionComponent   = {Transition}\r\n          onClose               = {()=> setOpen(false)}\r\n          aria-labelledby       = \"alert-dialog-slide-title\"\r\n          aria-describedby      = \"alert-dialog-slide-description\"\r\n          keepMounted\r\n        >\r\n        <Container style = {{padding:15, minWidth:300}}>\r\n          <Typography variant=\"h4\" style={{textAlign:'center'}}>\r\n            Your Age\r\n          </Typography>\r\n          <Typography variant=\"h6\" style={{textAlign:'center',marginTop:10}} >\r\n            {`${ age.def.year } year \r\n            ${ age.def.month } month \r\n            ${ age.def.day } days`}\r\n          </Typography>\r\n        </Container>\r\n      </Dialog>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { AppBar, Typography, Toolbar } from '@material-ui/core';\r\nimport { Menu } from '@material-ui/icons';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <AppBar variant=\"elevation\" position=\"fixed\">\r\n      <Toolbar>\r\n        <Typography variant=\"h4\">\r\n          <Menu /> Age Calculator\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Home } from './pages'\n\nimport NavBar from './NavBar';\n\nconst useStyles = makeStyles({\n  body:{\n    width: '100%',\n    minHeight: '100%',\n    background: 'linear-gradient(to top, #cd9cf2 0%, #f6f3ff 100%)',\n  },\n  root: {\n    height: '100vh',\n    background: ' #cd9cf2 ',\n    paddingTop:60,\n  }\n})\n\nconst App = () => {\nconst classes = useStyles();\n\n  return (\n    <div className={classes.body}>\n      <Container maxWidth=\"xs\" className={classes.root}>\n        <NavBar />\n        <Home />\n\n        <Switch>\n          {/* <Route path=\"/about\" components={} /> */}\n        </Switch>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createContext } from 'react'\n\n\nexport const AgeContext = createContext(null);\n\n","import React,{ useState } from 'react';\nimport { AgeContext } from './Contexts';\n\n\n\nconst Provider=(props)=> {\n  const [age, setAge] = useState({\n    init: new Date(0),\n    def: 0,\n    final: Date.now()\n  });\n\n  const [select, setSelect] = useState({\n    init    : true,\n    def     : false,\n    final   : false\n  })\n\n  const setSelects = attr => {\n    setSelect({\n      ...select,\n      [attr]: true\n    })\n  }\n  // const access = {\n  //   init    : age.init,\n  //   def     : age.def,\n  //   final   : age.final\n  // }\n\n  const access = {\n    init        : select.init,\n    def         : select.def,\n    final       : select.final,\n    setSelects,\n  }\n\n\n\n  return(\n    <AgeContext.Provider value={access} >\n      { props.children }\n    </AgeContext.Provider>\n  )\n}\n\nexport default Provider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport Provider from './components/store/AgeProvider';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider>\n      <App />\n    </Provider>\n  </BrowserRouter>\n, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}